## 5. üì¶ M√≥dulos y Paquetes

En un videojuego, podemos tener diferentes partes del c√≥digo separadas en m√≥dulos y paquetes para mantener todo organizado. Esto es como tener diferentes cajas y estanter√≠as para tus juguetes y juegos.

### 5.1 üì• Importaci√≥n de M√≥dulos

Un m√≥dulo es un archivo que contiene c√≥digo de Python. Podemos importar funciones y variables de un m√≥dulo para usarlas en otro archivo.

**Ejemplo:**

Imagina que tienes un archivo llamado `personajes.py` con la siguiente funci√≥n:

```python
# Archivo: personajes.py
def saludar_personaje(nombre):
    print(f"¬°Hola, {nombre}! Bienvenido al juego.")
```

Puedes importar esta funci√≥n y usarla en otro archivo:

```python
# Archivo: juego.py
import personajes

# Usar la funci√≥n importada
personajes.saludar_personaje("Mario")
# Salida: ¬°Hola, Mario! Bienvenido al juego.
```

### 5.2 üõ†Ô∏è Creaci√≥n de M√≥dulos

Crear un m√≥dulo es simplemente escribir funciones y variables en un archivo `.py`. Es como crear una nueva caja para tus juguetes.

**Ejemplo:**

Crea un archivo llamado `enemigos.py` con el siguiente contenido:

```python
# Archivo: enemigos.py
def atacar_enemigo(enemigo, da√±o):
    print(f"Atacaste a {enemigo} e infligiste {da√±o} puntos de da√±o.")
```

Ahora puedes usar este m√≥dulo en otro archivo:

```python
# Archivo: juego.py
import enemigos

# Usar la funci√≥n del m√≥dulo enemigos
enemigos.atacar_enemigo("Goomba", 10)
# Salida: Atacaste a Goomba e infligiste 10 puntos de da√±o.
```

### 5.3 üìö Uso de Paquetes

Un paquete es una colecci√≥n de m√≥dulos organizados en directorios. Es como tener una estanter√≠a con varias cajas de juguetes.

**Ejemplo:**

Imagina que tienes la siguiente estructura de archivos:

```
mi_juego/
    __init__.py
    personajes.py
    enemigos.py
```

El archivo `__init__.py` puede estar vac√≠o, pero indica que `mi_juego` es un paquete. Ahora puedes importar m√≥dulos de este paquete:

```python
# Archivo: juego.py
from mi_juego import personajes, enemigos

# Usar funciones de los m√≥dulos importados
personajes.saludar_personaje("Luigi")
enemigos.atacar_enemigo("Bowser", 20)
# Salida:
# ¬°Hola, Luigi! Bienvenido al juego.
# Atacaste a Bowser e infligiste 20 puntos de da√±o.
```

### 5.4 üîó Importaciones Relativas y Absolutas

Las importaciones pueden ser absolutas (usando la ruta completa) o relativas (usando la ruta relativa al archivo actual).

**Importaci√≥n Absoluta:**

```python
# Importaci√≥n absoluta
import mi_juego.personajes

mi_juego.personajes.saludar_personaje("Peach")
# Salida: ¬°Hola, Peach! Bienvenido al juego.
```

**Importaci√≥n Relativa:**

```python
# Archivo: mi_juego/juego.py

# Importaci√≥n relativa
from . import personajes

personajes.saludar_personaje("Toad")
# Salida: ¬°Hola, Toad! Bienvenido al juego.
```

Este desarrollo cubre c√≥mo importar m√≥dulos, crear m√≥dulos, usar paquetes y hacer importaciones relativas y absolutas en el contexto de un videojuego, explic√°ndolo de manera sencilla y con ejemplos pr√°cticos.
